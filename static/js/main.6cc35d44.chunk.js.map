{"version":3,"sources":["components/atoms/Button/Button.tsx","components/atoms/SearchField/SearchField.tsx","components/molecules/FormSearchContainer/FormSearchContainer.tsx","components/templates/App/App.tsx","components/pages/App/App.tsx","index.tsx","globalTheme.ts","services/address.ts","contexts/store.tsx"],"names":["ButtonWrapper","styled","button","_templateObject","props","theme","colors","lightblue","white","React","memo","react_default","a","createElement","SearchFieldWrapper","InputMask","SearchField_templateObject","darkgray","Object","assign","omit","mask","onChange","e","target","value","data-testid","placeholder","required","FormSearchContainerWrapper","form","FormSearchContainer_templateObject","gainsboro","FormSearchFieldWrapperLabel","div","_templateObject2","SearchBar","_templateObject3","LabelWrapper","label","_templateObject4","ctx","useContext","Store","_React$useState","useState","_React$useState2","slicedToArray","zipCode","setZipCode","onSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","preventDefault","abrupt","action","fetchAddress","stop","_x","apply","this","arguments","htmlFor","atoms_SearchField_SearchField","id","atoms_Button_Button","AppWrapper","App_templateObject","Title","h1","App_templateObject2","MapContainer","lazy","Promise","all","__webpack_require__","then","bind","App","molecules_FormSearchContainer_FormSearchContainer","Suspense","fallback","AppPage","store","templates_App_App","ReactDOM","render","styled_components_browser_esm","lib","pages_App_App","document","getElementById","fetchAddressByZipCode","address","addressJSON","fetch","concat","sent","json","erro","Error","fetchMapCoordinates","_ref2","_callee2","addresQueryString","mapsCoordinates","mapsCoordinatesJSON","_context2","cep","localidade","logradouro","process","get","_x2","createContext","initialState","status","reducer","state","type","objectSpread","payload","StoreProvider","_useAddress","_React$useReducer","useReducer","_React$useReducer2","dispatch","addressData","t0","resetState","useAddress","_useAddress2","Provider","children"],"mappings":"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","file":"static/js/main.6cc35d44.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst ButtonWrapper = styled.button`\n  border-radius: 5px;\n  background: ${props => props.theme.colors.lightblue};\n  color: ${props => props.theme.colors.white};\n  cursor: pointer;\n  font-size: 1rem;\n  padding: .35rem 1rem;\n  \n  &:hover {\n    border: 1px solid ${props => props.theme.colors.lightblue};\n  }\n`\n\nconst Button = () =>\n  <ButtonWrapper>\n    Buscar\n  </ButtonWrapper>\n\nexport default React.memo(Button)\n","import React from 'react'\nimport styled from 'styled-components'\nimport InputMask from 'react-input-mask'\nimport { omit } from 'lodash'\n\ninterface ISearchField {\n  id: string\n  onChange: any\n  value: string\n}\n\nconst SearchFieldWrapper = styled(InputMask)`\n  border: 1px solid ${props => props.theme.colors.darkgray};\n  border-radius: 5px;\n  box-shadow: 0;\n  font-size: 1rem;\n  padding: 5px 10px;\n`\n\nconst SearchField = (props: ISearchField) => {\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    props.onChange(e.target.value)\n  }\n\n  return (\n    <SearchFieldWrapper\n      {...omit(props, 'onChange')}\n      mask='99999-999'\n      onChange={onChange}\n      data-testid='search-field'\n      placeholder='01234-567'\n      required\n    />\n  )\n}\n\nexport default React.memo(SearchField)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Store } from '../../../contexts/store'\nimport Button from '../../atoms/Button'\nimport SearchField from '../../atoms/SearchField'\n\nconst FormSearchContainerWrapper = styled.form`\n  background: ${props => props.theme.colors.gainsboro};\n  box-sizing: border-box;\n  padding: 2rem 2rem 4rem;\n  width: 100%;\n`\n\nconst FormSearchFieldWrapperLabel = styled.div`\n  font-weight: 600;\n  margin-bottom: 2rem;\n`\n\nconst SearchBar = styled.div`\n  color: ${props => props.theme.colors.darkgray};\n  display: flex;\n`\n\nconst LabelWrapper = styled.label`\n  > * {\n    margin-right: 1rem;\n  }\n`\n\nconst FormSearchContainer = () => {\n  const ctx = React.useContext(Store)\n  const [ zipCode, setZipCode ] = React.useState('')\n\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n\n    if (!zipCode) return\n\n    await ctx.action.fetchAddress(zipCode)\n  }\n\n  return (\n    <FormSearchContainerWrapper onSubmit={onSubmit} data-testid='form-search-container'>\n      <FormSearchFieldWrapperLabel>Consultar</FormSearchFieldWrapperLabel>\n      <SearchBar>\n        <LabelWrapper htmlFor=\"search-field\">\n          <span>CEP</span>\n          <SearchField id=\"search-field\" value={zipCode} onChange={setZipCode} />\n        </LabelWrapper>\n        <Button />\n      </SearchBar>\n    </FormSearchContainerWrapper>\n  )\n}\n\nexport default React.memo(FormSearchContainer)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport FormSearchContainer from '../../molecules/FormSearchContainer'\n\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: arial;\n`\n\nconst Title = styled.h1`\n  font-size: 2rem;\n  font-weight: bold;\n  padding: 2rem 0;\n`\n\nconst MapContainer = React.lazy(() => import('../../organims/MapContainer'))\n\nconst App = () =>\n  <AppWrapper>\n    <Title>Consulta de endereço</Title>\n    <FormSearchContainer />\n    <React.Suspense fallback={<div>Carregando...</div>}>\n      <MapContainer />\n    </React.Suspense>\n  </AppWrapper>\n\nexport default App\n","import React from 'react'\n\nimport App from '../../templates/App'\nimport { StoreProvider } from '../../../contexts/store'\n\nconst AppPage = () =>\n  <StoreProvider>\n    <App />\n  </StoreProvider>\n\nexport default AppPage\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'styled-components'\nimport { Reset } from 'styled-reset'\n\nimport { globalTheme } from './globalTheme'\nimport App from './components/pages/App'\n\nReactDOM.render(\n  <ThemeProvider theme={globalTheme}>\n    <div>\n      <Reset />\n      <App />\n    </div>\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n","import { DefaultTheme } from 'styled-components'\n\nexport const globalTheme: DefaultTheme = {\n  colors: {\n    darkgray: '#999999',\n    gainsboro: '#e0ded9',\n    lightblue: '#aadaff',\n    white: '#ffffff',\n  }\n}\n","import { get } from 'lodash'\n\nimport { IAddress } from '../models'\n\nexport const fetchAddressByZipCode = async (zipCode: string) => {\n  const address = await fetch(`https://viacep.com.br/ws/${zipCode}/json`)\n  const addressJSON = await address.json()\n\n  if (addressJSON.erro) throw new Error()\n\n  return addressJSON\n}\n\nexport const fetchMapCoordinates = async (address: IAddress) => {\n  const addresQueryString = `${address.cep} ${address.localidade}  ${address.logradouro}`\n\n  const mapsCoordinates = await fetch(\n    `https://maps.googleapis.com/maps/api/geocode/json?address=${addresQueryString}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`\n  )\n  const mapsCoordinatesJSON = await mapsCoordinates.json()\n\n  return get(mapsCoordinatesJSON, 'results[0].geometry.location', {})\n}\n","import React from 'react'\n\nimport {\n  IState,\n  IContextProps,\n  Actions\n} from '../models'\nimport { fetchAddressByZipCode, fetchMapCoordinates } from '../services/address'\n\nexport const Store = React.createContext({} as IContextProps)\n\nconst initialState: IState = {\n  address: {},\n  status: ''\n}\n\nconst reducer = (state: IState, action: Actions) => {\n  switch (action.type) {\n    case 'FETCH_ADDRESS':\n      return { ...state, address: action.payload, status: 'LOADED' }\n    case 'FETCH_ADDRESS_FAIL':\n      return { ...state, address: {}, status: 'ERROR' }\n    case 'ADDRESS_RESET': {\n      return { ...state, address: {}, status: '' }\n    }\n    default:\n      return state\n  }\n}\n\nexport const useAddress = () => {\n  const [ state, dispatch ] = React.useReducer(reducer, initialState)\n\n  const fetchAddress = async (zipCode: string) => {\n    try {\n      const addressData = await fetchAddressByZipCode(zipCode)\n      const mapsCoordinates = await fetchMapCoordinates(addressData)\n\n      return dispatch({\n        type: 'FETCH_ADDRESS',\n        payload: {...addressData, mapsCoordinates}\n      })\n    } catch (e) {\n      return dispatch({\n        type: 'FETCH_ADDRESS_FAIL'\n      })\n    }\n  }\n\n  const resetState = () =>\n    dispatch({\n      type: 'ADDRESS_RESET'\n    })\n\n  return [ state, { fetchAddress, resetState } ]\n}\n\nexport const StoreProvider = (props: any) => {\n  const [ state, action ] = useAddress()\n\n  return (\n    <Store.Provider value={{ state, action }}>\n      {props.children}\n    </Store.Provider>\n  )\n}\n"],"sourceRoot":""}